import numpy as np

'''
单架无人机单目标定义
'''
# 定义起飞地点 目标地点  空间限制
start = (10, 70, 10)  # x  y 高度
goal = (60, 180, 10)  # x  y 高度
limits = [0, 200, 0, 200, 50]  # 左  右  下  上  高度

'''
多无人机异构目标定义
'''
# 多无人机起始点
uavs_start = [(10, 40, 10), (20, 20, 10), (40, 10, 10), (60, 20, 10)]
# 无人机侦察角
F = np.pi / 2
# 多目标类型
goals = {
    "point_goals": [],  # 点目标  (x,y,z)点
    # 面目标，4顶点，左下角开始逆时针定义（当 目标宽度 <= 探测宽度 视为线目标）
    "surface_goals": [(55, 175, 10, 65, 175, 10, 65, 185, 10, 55, 185, 10),
                      (155, 125, 10, 165, 125, 10, 165, 135, 10, 155, 135, 10),
                      (130, 170, 10, 190, 170, 10, 190, 180, 10, 130, 180, 10),
                      (160, 80, 10, 200, 80, 10, 200, 110, 10, 160, 110, 10),
                      ]
}

# 定义障碍信息
obstacle = {
    "radar": [(130, 100, 0, 20)],  # 障碍,雷达列表,多个,x,y,z,r
    # "gun": [(120, 40, 0, 30),(130,70,0,20)],         # 障碍,高炮列表,多个
    "gun": [(120, 40, 0, 30)],  # 障碍,高炮列表,多个
    # "missile": [(90, 150, 0, 15)],   # 障碍,导弹列表,多个
    "missile": [(70, 150, 0, 15)],  # 障碍,导弹列表,多个
    "mountain": [(50, 40, 15, 10)],  # 障碍,山体列表,多个,圆锥中心坐标（x,y,z,r)
    # "weather": [(70, 90, 10, 20),(50,105,10,20)],   # 障碍,天气列表,圆柱,多个
    # "weather": [(70, 90, 10, 20)],   # 障碍,天气列表,圆柱,多个
    "no_fly": [(20, 110, 50, 110, 50, 150, 40, 150, 20, 140)]  # 禁飞区，多边形，多个，端点信息，左下角，逆时针定义
}

# 定义运行配置信息
nRun = 15  # 运行次数
nPts = 3  # 断点个数
d = 50  # 计算插值点数量因子
nPop = 100  # 粒子数量
epochs = 100  # 迭代次数
f_interp = 'cubic'  # 插值方法  slinear  quadratic  cubic
Xinit = None  # 粒子初始值
ns = 1 + (nPts + 1) * d  # 插值点数量
result = [None] * nRun  # 所有的运行结果
# 显示    布局(多种)     优势
